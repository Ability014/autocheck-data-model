{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.11", "generated_at": "2024-07-23T14:42:42.292412Z", "invocation_id": "71181c20-f581-4e75-aa14-5dd188fb8bbf", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.434174Z", "completed_at": "2024-07-23T14:42:39.443911Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.450487Z", "completed_at": "2024-07-23T14:42:39.450487Z"}], "thread_id": "Thread-2", "execution_time": 0.03517866134643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_customers", "compiled": true, "compiled_code": "SELECT \nID As customer_id,\nNAME As customer_name,\n_AIRBYTE_EXTRACTED_AT\nFROM JAFFLE_SHOP.RAW.raw_customers", "relation_name": "JAFFLE_SHOP.INTERMEDIATE.stg_customers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.459617Z", "completed_at": "2024-07-23T14:42:39.466261Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.469796Z", "completed_at": "2024-07-23T14:42:39.469796Z"}], "thread_id": "Thread-2", "execution_time": 0.015289068222045898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_products", "compiled": true, "compiled_code": "SELECT\nSKU As product_id,\nNAME As product_name,\nTYPE As product_type,\nPRICE As unit_price,\nDESCRIPTION As description,\n_AIRBYTE_EXTRACTED_AT\nFROM JAFFLE_SHOP.RAW.raw_products", "relation_name": "JAFFLE_SHOP.INTERMEDIATE.stg_products"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.478054Z", "completed_at": "2024-07-23T14:42:39.484129Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.486760Z", "completed_at": "2024-07-23T14:42:39.486760Z"}], "thread_id": "Thread-2", "execution_time": 0.01248478889465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_request_approvals", "compiled": true, "compiled_code": "\n\nwith windowed_requests_approval as (\nselect\n    max(created_at) OVER (PARTITION BY request_id) as final_date,\n    min(created_at) OVER (PARTITION BY REQUEST_ID) first_date,\n    first_value(approval_id) OVER (PARTITION BY REQUEST_ID ORDER BY created_at) first_approval_id,\n    last_value(approval_id) OVER (PARTITION BY REQUEST_ID ORDER BY created_at) last_approval_id,\n    first_value(action) OVER (PARTITION BY REQUEST_ID ORDER BY created_at) first_action,\n    last_value(action) OVER (PARTITION BY REQUEST_ID ORDER BY created_at) last_action,\n    ra.*\nfrom orbit_mds_dev.raw.requests_approvals ra\n)\nselect\n    first_approval_id, \n    last_approval_id,\n    request_id,\n    org_id,\n    amount,\n    first_action,\n    last_action,\n    first_date,\n    final_date,\n    datediff(minute, first_date, final_date) as time_to_final_decision,\n    user_id\nfrom windowed_requests_approval\nwhere first_date = created_at", "relation_name": "orbit_mds_dev.core.stg_request_approvals"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.495320Z", "completed_at": "2024-07-23T14:42:39.503414Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.506328Z", "completed_at": "2024-07-23T14:42:39.506328Z"}], "thread_id": "Thread-2", "execution_time": 0.01836371421813965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_salesorders", "compiled": true, "compiled_code": "SELECT \nro.id As order_id,\nri.id As item_id,\nro.customer As customer_id,\nro.store_id,\nri.sku As product_id,\nrp.price As subtotal,\n(rp.price * tax_rate) As tax_paid,\nrp.price + (rp.price * tax_rate) As order_total,\nTRY_CAST(ordered_at As TIMESTAMP) As ordered_date,\nro._AIRBYTE_EXTRACTED_AT\nFROM JAFFLE_SHOP.RAW.raw_orders as ro\nJOIN JAFFLE_SHOP.RAW.raw_items as ri\nON ro.id=ri.order_id\nLEFT JOIN JAFFLE_SHOP.RAW.raw_products as rp\nON ri.sku=rp.sku\nLEFT JOIN JAFFLE_SHOP.RAW.raw_stores as rs\nON ro.store_id=rs.id", "relation_name": "JAFFLE_SHOP.INTERMEDIATE.stg_salesorders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.515718Z", "completed_at": "2024-07-23T14:42:39.523669Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.526684Z", "completed_at": "2024-07-23T14:42:39.526684Z"}], "thread_id": "Thread-2", "execution_time": 0.017000436782836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_stores", "compiled": true, "compiled_code": "SELECT\nID as store_id,\nNAME As store_name,\ntax_rate,\nCAST(opened_at as DATE) As opened_at,\n_AIRBYTE_EXTRACTED_AT\nFROM JAFFLE_SHOP.RAW.raw_stores", "relation_name": "JAFFLE_SHOP.INTERMEDIATE.stg_stores"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.533831Z", "completed_at": "2024-07-23T14:42:39.540228Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.543236Z", "completed_at": "2024-07-23T14:42:39.543236Z"}], "thread_id": "Thread-2", "execution_time": 0.013554573059082031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.stg_supplies", "compiled": true, "compiled_code": "SELECT\nID As supplies_id,\nsku As product_id,\ncost,\nname As supplies_name,\nperishable,\n_AIRBYTE_EXTRACTED_AT\nFROM JAFFLE_SHOP.RAW.raw_supplies", "relation_name": "JAFFLE_SHOP.INTERMEDIATE.stg_supplies"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.551232Z", "completed_at": "2024-07-23T14:42:39.562362Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.564364Z", "completed_at": "2024-07-23T14:42:39.564364Z"}], "thread_id": "Thread-2", "execution_time": 0.0175626277923584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.tf_requests_approvals_v2", "compiled": true, "compiled_code": "\n\nwith windowed_requests_approval as (\nselect\n    max(created_at) OVER (PARTITION BY request_id) as final_date,\n    min(created_at) OVER (PARTITION BY REQUEST_ID) first_date,\n    first_value(approval_id) OVER (PARTITION BY REQUEST_ID ORDER BY created_at) first_approval_id,\n    last_value(approval_id) OVER (PARTITION BY REQUEST_ID ORDER BY created_at) last_approval_id,\n    first_value(action) OVER (PARTITION BY REQUEST_ID ORDER BY created_at) first_action,\n    last_value(action) OVER (PARTITION BY REQUEST_ID ORDER BY created_at) last_action,\n    ra.*\nfrom orbit_mds_dev.raw.requests_approvals ra\n),\nfiltered_requests_approval as (\nselect\n    first_approval_id, \n    last_approval_id,\n    request_id,\n    org_id,\n    amount,\n    first_action,\n    last_action,\n    first_date,\n    final_date,\n    datediff(minute, first_date, final_date) as time_to_final_decision,\n    user_id\nfrom windowed_requests_approval\n\n\n  -- this filter will only be applied on an incremental run\n  -- (uses >= to include records whose timestamp occurred since the last run of this model)\n  where final_date > (select coalesce(max(final_date), '1900-01-01') from orbit_mds_dev.core.tf_requests_approvals_v2) and first_date = created_at\n\n\n)\nselect\n    *\nfrom filtered_requests_approval\n--where first_date = created_at", "relation_name": "orbit_mds_dev.core.tf_requests_approvals_v2"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.571639Z", "completed_at": "2024-07-23T14:42:39.580205Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.583213Z", "completed_at": "2024-07-23T14:42:39.583213Z"}], "thread_id": "Thread-2", "execution_time": 0.017098426818847656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.source_relationships_jaffle_shop_raw_orders_customer__id__source_jaffle_shop_raw_customers_.10dbe1954d", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer as from_field\n    from JAFFLE_SHOP.RAW.raw_orders\n    where customer is not null\n),\n\nparent as (\n    select id as to_field\n    from JAFFLE_SHOP.RAW.raw_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.593261Z", "completed_at": "2024-07-23T14:42:39.601261Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.604362Z", "completed_at": "2024-07-23T14:42:39.604362Z"}], "thread_id": "Thread-2", "execution_time": 0.01600050926208496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dim_customers", "compiled": true, "compiled_code": "SELECT \nmd5(cast(coalesce(cast(customer_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_key,\n*\nFROM JAFFLE_SHOP.INTERMEDIATE.stg_customers", "relation_name": "JAFFLE_SHOP.CORE.dim_customers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.612310Z", "completed_at": "2024-07-23T14:42:39.619326Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.622325Z", "completed_at": "2024-07-23T14:42:39.622325Z"}], "thread_id": "Thread-2", "execution_time": 0.014939308166503906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dim_products", "compiled": true, "compiled_code": "SELECT \nmd5(cast(coalesce(cast(product_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as product_key,\n*\nFROM JAFFLE_SHOP.INTERMEDIATE.stg_products", "relation_name": "JAFFLE_SHOP.CORE.dim_products"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.630389Z", "completed_at": "2024-07-23T14:42:39.639033Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.641835Z", "completed_at": "2024-07-23T14:42:39.641835Z"}], "thread_id": "Thread-2", "execution_time": 0.01674199104309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.tf_requests_approvals", "compiled": true, "compiled_code": "\n\nselect\n    first_approval_id, \n    last_approval_id,\n    request_id,\n    org_id,\n    amount,\n    first_action,\n    last_action,\n    first_date,\n    final_date,\n    datediff(minute, first_date, final_date) as time_to_final_decision,\n    user_id\nfrom orbit_mds_dev.core.stg_request_approvals\n\n\n  -- this filter will only be applied on an incremental run\n  -- (uses >= to include records whose timestamp occurred since the last run of this model)\n  where final_date > (select coalesce(max(final_date), '1900-01-01') from orbit_mds_dev.core.tf_requests_approvals)\n\n", "relation_name": "orbit_mds_dev.core.tf_requests_approvals"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.650474Z", "completed_at": "2024-07-23T14:42:39.662037Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.664361Z", "completed_at": "2024-07-23T14:42:39.664361Z"}], "thread_id": "Thread-2", "execution_time": 0.019677400588989258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.fact_orders", "compiled": true, "compiled_code": "SELECT\n    md5(cast(coalesce(cast(orders.order_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(orders.item_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as orders_key,\n    md5(cast(coalesce(cast(customer_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as customer_key,\n    md5(cast(coalesce(cast(product_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as product_key,\n    md5(cast(coalesce(cast(store_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as store_key,\n    TRY_CAST(CONCAT(LEFT(ordered_date, 4), SUBSTR(ordered_date, 6, 2), SUBSTR(ordered_date, 9, 2)) As INTEGER) As date_key,\n    TRY_CAST(CONCAT(LEFT(ordered_date, 4), SUBSTR(ordered_date, 6, 2)) As INTEGER) As month_key, -- New change\n    orders.order_id as salesorderid,\n    item_id as salesitemid,\n    subtotal,\n    tax_paid,\n    order_total,\n    ordered_date\nfrom JAFFLE_SHOP.INTERMEDIATE.stg_salesorders as orders", "relation_name": "JAFFLE_SHOP.CORE.fact_orders"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.673725Z", "completed_at": "2024-07-23T14:42:39.681428Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.683691Z", "completed_at": "2024-07-23T14:42:39.683691Z"}], "thread_id": "Thread-2", "execution_time": 0.015136003494262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dim_stores", "compiled": true, "compiled_code": "SELECT \nmd5(cast(coalesce(cast(store_id as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as store_key,\n*\nFROM JAFFLE_SHOP.INTERMEDIATE.stg_stores", "relation_name": "JAFFLE_SHOP.CORE.dim_stores"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.691350Z", "completed_at": "2024-07-23T14:42:39.705421Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.707647Z", "completed_at": "2024-07-23T14:42:39.708209Z"}], "thread_id": "Thread-2", "execution_time": 0.02218484878540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.not_null_dim_customers_customer_key.4bebfb3411", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_key\nfrom JAFFLE_SHOP.CORE.dim_customers\nwhere customer_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.715850Z", "completed_at": "2024-07-23T14:42:39.727226Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.729792Z", "completed_at": "2024-07-23T14:42:39.729792Z"}], "thread_id": "Thread-2", "execution_time": 0.01830005645751953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.unique_dim_customers_customer_key.ad8156656e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    customer_key as unique_field,\n    count(*) as n_records\n\nfrom JAFFLE_SHOP.CORE.dim_customers\nwhere customer_key is not null\ngroup by customer_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.737523Z", "completed_at": "2024-07-23T14:42:39.746193Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.748508Z", "completed_at": "2024-07-23T14:42:39.748508Z"}], "thread_id": "Thread-2", "execution_time": 0.01550912857055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.not_null_dim_products_product_key.a98dfddb9a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product_key\nfrom JAFFLE_SHOP.CORE.dim_products\nwhere product_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.756001Z", "completed_at": "2024-07-23T14:42:39.763981Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.766860Z", "completed_at": "2024-07-23T14:42:39.766860Z"}], "thread_id": "Thread-2", "execution_time": 0.01580643653869629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.unique_dim_products_product_key.5837b56652", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    product_key as unique_field,\n    count(*) as n_records\n\nfrom JAFFLE_SHOP.CORE.dim_products\nwhere product_key is not null\ngroup by product_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.774174Z", "completed_at": "2024-07-23T14:42:39.784095Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.786298Z", "completed_at": "2024-07-23T14:42:39.786298Z"}], "thread_id": "Thread-2", "execution_time": 0.016883134841918945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.not_null_fact_orders_orders_key.52aad58259", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect orders_key\nfrom JAFFLE_SHOP.CORE.fact_orders\nwhere orders_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.794031Z", "completed_at": "2024-07-23T14:42:39.807132Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.810507Z", "completed_at": "2024-07-23T14:42:39.810507Z"}], "thread_id": "Thread-2", "execution_time": 0.020467519760131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.relationships_fact_orders_customer_key__customer_key__ref_dim_customers_.27f3f75b94", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select customer_key as from_field\n    from JAFFLE_SHOP.CORE.fact_orders\n    where customer_key is not null\n),\n\nparent as (\n    select customer_key as to_field\n    from JAFFLE_SHOP.CORE.dim_customers\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.816500Z", "completed_at": "2024-07-23T14:42:39.826073Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.828909Z", "completed_at": "2024-07-23T14:42:39.828909Z"}], "thread_id": "Thread-2", "execution_time": 0.016446828842163086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.relationships_fact_orders_product_key__product_key__ref_dim_products_.bc8e7ded36", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select product_key as from_field\n    from JAFFLE_SHOP.CORE.fact_orders\n    where product_key is not null\n),\n\nparent as (\n    select product_key as to_field\n    from JAFFLE_SHOP.CORE.dim_products\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.837519Z", "completed_at": "2024-07-23T14:42:39.845568Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.849818Z", "completed_at": "2024-07-23T14:42:39.849818Z"}], "thread_id": "Thread-2", "execution_time": 0.01681375503540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.unique_fact_orders_orders_key.98d19fe28b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    orders_key as unique_field,\n    count(*) as n_records\n\nfrom JAFFLE_SHOP.CORE.fact_orders\nwhere orders_key is not null\ngroup by orders_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.858246Z", "completed_at": "2024-07-23T14:42:39.865781Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.868911Z", "completed_at": "2024-07-23T14:42:39.868911Z"}], "thread_id": "Thread-2", "execution_time": 0.015200376510620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.not_null_dim_stores_store_key.5820f7371e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect store_key\nfrom JAFFLE_SHOP.CORE.dim_stores\nwhere store_key is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.874983Z", "completed_at": "2024-07-23T14:42:39.884505Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.887893Z", "completed_at": "2024-07-23T14:42:39.887893Z"}], "thread_id": "Thread-2", "execution_time": 0.017009735107421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.relationships_fact_orders_store_key__store_key__ref_dim_stores_.8077f277e5", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select store_key as from_field\n    from JAFFLE_SHOP.CORE.fact_orders\n    where store_key is not null\n),\n\nparent as (\n    select store_key as to_field\n    from JAFFLE_SHOP.CORE.dim_stores\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.895895Z", "completed_at": "2024-07-23T14:42:39.905700Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:39.908805Z", "completed_at": "2024-07-23T14:42:39.908805Z"}], "thread_id": "Thread-2", "execution_time": 0.017812728881835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.dbt_jaffle_shop.unique_dim_stores_store_key.d146828e53", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    store_key as unique_field,\n    count(*) as n_records\n\nfrom JAFFLE_SHOP.CORE.dim_stores\nwhere store_key is not null\ngroup by store_key\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:39.423325Z", "completed_at": "2024-07-23T14:42:41.748381Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:41.751039Z", "completed_at": "2024-07-23T14:42:41.751039Z"}], "thread_id": "Thread-1", "execution_time": 2.854069948196411, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dates", "compiled": true, "compiled_code": "\n\n\n    \nwith base_dates as (\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 2921\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    dateadd(\n        day,\n        (row_number() over (order by 1) - 1),\n        cast('2018-01-01' as timestamp)\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast('2025-12-31' as timestamp)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as timestamp) as date_day\nfrom\n    date_spine d\n\n\n),\ndates_with_prior_year_dates as (\n\n    select\n        cast(d.date_day as date) as date_day,\n        cast(\n\n    dateadd(\n        year,\n        -1,\n        d.date_day\n        )\n\n as date) as prior_year_date_day,\n        cast(\n\n    dateadd(\n        day,\n        -364,\n        d.date_day\n        )\n\n as date) as prior_year_over_year_date_day\n    from\n    \tbase_dates d\n\n)\nselect\n    d.date_day,\n    cast(\n\n    dateadd(\n        day,\n        -1,\n        d.date_day\n        )\n\n as date) as prior_date_day,\n    cast(\n\n    dateadd(\n        day,\n        1,\n        d.date_day\n        )\n\n as date) as next_date_day,\n    d.prior_year_date_day as prior_year_date_day,\n    d.prior_year_over_year_date_day,\n    case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end as day_of_week,\n    date_part('dayofweekiso', d.date_day) as day_of_week_iso,\n    -- long version not implemented on Snowflake so we're doing it manually :/\n    case dayname(d.date_day)\n        when 'Mon' then 'Monday'\n        when 'Tue' then 'Tuesday'\n        when 'Wed' then 'Wednesday'\n        when 'Thu' then 'Thursday'\n        when 'Fri' then 'Friday'\n        when 'Sat' then 'Saturday'\n        when 'Sun' then 'Sunday'\n    end as day_of_week_name,\n    dayname(d.date_day) as day_of_week_name_short,\n    date_part('day', d.date_day) as day_of_month,\n    date_part('dayofyear', d.date_day) as day_of_year,\n\n    \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end - 1),\n        d.date_day\n        )\n\n as date) as week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.date_day) = 7 then 1\n            else date_part('dayofweek', d.date_day) + 1\n        end - 1),\n        d.date_day\n        )\n\n as date)\n        )\n\n as date) as week_end_date,\n    \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.prior_year_over_year_date_day) = 7 then 1\n            else date_part('dayofweek', d.prior_year_over_year_date_day) + 1\n        end - 1),\n        d.prior_year_over_year_date_day\n        )\n\n as date) as prior_year_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        \n    \n    cast(\n\n    dateadd(\n        day,\n        -1 * (case\n            when date_part('dayofweek', d.prior_year_over_year_date_day) = 7 then 1\n            else date_part('dayofweek', d.prior_year_over_year_date_day) + 1\n        end - 1),\n        d.prior_year_over_year_date_day\n        )\n\n as date)\n        )\n\n as date) as prior_year_week_end_date,\n    cast(date_part('week', d.date_day) as integer) as week_of_year,\n\n    cast(date_trunc('week', d.date_day) as date) as iso_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        cast(date_trunc('week', d.date_day) as date)\n        )\n\n as date) as iso_week_end_date,\n    cast(date_trunc('week', d.prior_year_over_year_date_day) as date) as prior_year_iso_week_start_date,\n    cast(\n\n    dateadd(\n        day,\n        6,\n        cast(date_trunc('week', d.prior_year_over_year_date_day) as date)\n        )\n\n as date) as prior_year_iso_week_end_date,\n    cast(date_part('weekiso', d.date_day) as integer) as iso_week_of_year,\n\n    cast(date_part('week', d.prior_year_over_year_date_day) as integer) as prior_year_week_of_year,\n    cast(date_part('weekiso', d.prior_year_over_year_date_day) as integer) as prior_year_iso_week_of_year,\n\n    cast(date_part('month', d.date_day) as integer) as month_of_year,\n    to_char(d.date_day, 'MMMM')  as month_name,\n    to_char(d.date_day, 'MON')  as month_name_short,\n\n    cast(date_trunc('month', d.date_day) as date) as month_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        month,\n        1,\n        date_trunc('month', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as month_end_date,\n\n    cast(date_trunc('month', d.prior_year_date_day) as date) as prior_year_month_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        month,\n        1,\n        date_trunc('month', d.prior_year_date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as prior_year_month_end_date,\n\n    cast(date_part('quarter', d.date_day) as integer) as quarter_of_year,\n    cast(date_trunc('quarter', d.date_day) as date) as quarter_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        quarter,\n        1,\n        date_trunc('quarter', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as quarter_end_date,\n\n    cast(date_part('year', d.date_day) as integer) as year_number,\n    cast(date_trunc('year', d.date_day) as date) as year_start_date,\n    cast(cast(\n        \n\n    dateadd(\n        day,\n        -1,\n        \n\n    dateadd(\n        year,\n        1,\n        date_trunc('year', d.date_day)\n        )\n\n\n        )\n\n\n        as date) as date) as year_end_date\nfrom\n    dates_with_prior_year_dates d\norder by 1\n\n", "relation_name": "JAFFLE_SHOP.RAW.dates"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-23T14:42:42.275381Z", "completed_at": "2024-07-23T14:42:42.281484Z"}, {"name": "execute", "started_at": "2024-07-23T14:42:42.283396Z", "completed_at": "2024-07-23T14:42:42.283396Z"}], "thread_id": "Thread-2", "execution_time": 0.012978076934814453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_jaffle_shop.dim_date", "compiled": true, "compiled_code": "SELECT\nTRY_CAST(CONCAT(LEFT(DATE_DAY, 4), SUBSTR(DATE_DAY, 6, 2), SUBSTR(DATE_DAY, 9, 2)) AS INTEGER) As date_key,\nTRY_CAST(CONCAT(LEFT(DATE_DAY, 4), SUBSTR(DATE_DAY, 6, 2)) AS INTEGER) As month_key,\n*\nFROM JAFFLE_SHOP.RAW.dates", "relation_name": "JAFFLE_SHOP.CORE.dim_date"}], "elapsed_time": 8.336290836334229, "args": {"log_path": "C:\\Users\\Thinkbook 14\\OneDrive - University of Lagos\\My Docs\\Data Engineering\\First DE Project\\MDS-for-Quality-Pipelines\\dbt_jaffle_shop\\logs", "log_level_file": "debug", "log_format_file": "debug", "send_anonymous_usage_stats": true, "favor_state": false, "show_resource_report": false, "log_level": "info", "which": "generate", "strict_mode": false, "populate_cache": true, "enable_legacy_logger": false, "partial_parse": true, "exclude": [], "use_colors_file": true, "warn_error_options": {"include": [], "exclude": []}, "empty_catalog": false, "invocation_command": "dbt docs generate --vars pass_: password1234", "macro_debugging": false, "select": [], "log_format": "default", "print": true, "write_json": true, "partial_parse_file_diff": true, "vars": {"pass_": "password1234"}, "defer": false, "printer_width": 80, "introspect": true, "use_colors": true, "version_check": true, "log_file_max_bytes": 10485760, "profiles_dir": "C:\\Users\\Thinkbook 14\\.dbt", "cache_selected_only": false, "static": false, "compile": true, "project_dir": "C:\\Users\\Thinkbook 14\\OneDrive - University of Lagos\\My Docs\\Data Engineering\\First DE Project\\MDS-for-Quality-Pipelines\\dbt_jaffle_shop", "static_parser": true, "quiet": false, "indirect_selection": "eager"}}